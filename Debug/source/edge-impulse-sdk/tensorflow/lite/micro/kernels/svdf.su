cmath:222:3:constexpr float std::exp(float)	16	static
cmath:501:3:constexpr float std::tanh(float)	16	static
cmath:661:3:constexpr bool std::signbit(float)	16	static
gthr-default.h:229:1:int __gthread_key_delete(__gthread_key_t)	16	static
limits:1204:7:static constexpr long int std::numeric_limits<long int>::min()	4	static
limits:1207:7:static constexpr long int std::numeric_limits<long int>::max()	4	static
fixedpoint.h:329:21:IntegerType gemmlowp::SaturatingRoundingDoublingHighMul(IntegerType, IntegerType) [with IntegerType = long int]	64	static
common.h:153:14:int32 tflite::MultiplyByQuantizedMultiplier(int32, int32, int)	32	static
kernel_util.h:27:12:int tflite::NumDimensions(const TfLiteTensor*)	16	static
kernel_util.h:31:28:const TfLiteTensor* tflite::GetInput(const TfLiteContext*, const TfLiteNode*, int)	24	static
kernel_util.h:38:22:TfLiteTensor* tflite::GetVariableInput(TfLiteContext*, const TfLiteNode*, int)	32	static
kernel_util.h:43:22:TfLiteTensor* tflite::GetOutput(TfLiteContext*, const TfLiteNode*, int)	24	static
kernel_util.h:73:28:const TfLiteTensor* tflite::GetOptionalInputTensor(TfLiteContext*, const TfLiteNode*, int)	32	static
activation_utils.h:32:14:float tflite::ops::micro::ActivationValFloat(TfLiteFusedActivation, float)	48	static
svdf.cc:55:20:void tflite::ops::micro::svdf::{anonymous}::ApplyTimeWeightsBiasAndActivation(int, int, int, int, int, const float*, const float*, TfLiteFusedActivation, float*, float*, float*)	104	static
svdf.cc:116:13:void tflite::ops::micro::svdf::{anonymous}::EvalFloatSVDF(TfLiteContext*, TfLiteNode*, const TfLiteTensor*, const TfLiteTensor*, const TfLiteTensor*, const TfLiteTensor*, const TfLiteSVDFParams*, int, TfLiteTensor*, TfLiteTensor*)	160	static
stl_algobase.h:198:5:constexpr const _Tp& std::min(const _Tp&, const _Tp&) [with _Tp = long int]	16	static
stl_algobase.h:222:5:constexpr const _Tp& std::max(const _Tp&, const _Tp&) [with _Tp = long int]	16	static
svdf.cc:187:6:void tflite::ops::micro::svdf::{anonymous}::EvalIntegerSVDF(TfLiteContext*, TfLiteNode*, const TfLiteTensor*, const TfLiteTensor*, const TfLiteTensor*, const TfLiteTensor*, const TfLiteSVDFParams*, TfLiteTensor*, TfLiteTensor*, const tflite::ops::micro::svdf::{anonymous}::OpData&, int32_t, int32_t)	224	static
svdf.cc:339:7:void* tflite::ops::micro::svdf::Init(TfLiteContext*, const char*, size_t)	32	static
svdf.cc:349:14:TfLiteStatus tflite::ops::micro::svdf::Prepare(TfLiteContext*, TfLiteNode*)	144	static
svdf.cc:485:14:TfLiteStatus tflite::ops::micro::svdf::Eval(TfLiteContext*, TfLiteNode*)	88	static
svdf.cc:530:21:TfLiteRegistration* tflite::ops::micro::Register_SVDF()	4	static
stl_algobase.h:222:5:constexpr const _Tp& std::max(const _Tp&, const _Tp&) [with _Tp = float]	16	static
stl_algobase.h:198:5:constexpr const _Tp& std::min(const _Tp&, const _Tp&) [with _Tp = float]	16	static
fixedpoint.h:357:20:IntegerType gemmlowp::RoundingDivideByPOT(IntegerType, int) [with IntegerType = long int]	56	static
max.h:24:10:T tflite::TfLiteMax(const T&, const T&) [with T = float]	16	static
min.h:24:10:T tflite::TfLiteMin(const T&, const T&) [with T = float]	16	static
tensor_ctypes.h:29:17:const T* tflite::GetTensorData(const TfLiteTensor*) [with T = float]	16	static
tensor_ctypes.h:24:11:T* tflite::GetTensorData(TfLiteTensor*) [with T = float]	16	static
tensor_ctypes.h:24:11:T* tflite::GetTensorData(TfLiteTensor*) [with T = short int]	16	static
tensor_ctypes.h:29:17:const T* tflite::GetTensorData(const TfLiteTensor*) [with T = signed char]	16	static
tensor_ctypes.h:29:17:const T* tflite::GetTensorData(const TfLiteTensor*) [with T = short int]	16	static
tensor_ctypes.h:29:17:const T* tflite::GetTensorData(const TfLiteTensor*) [with T = long int]	16	static
tensor_ctypes.h:24:11:T* tflite::GetTensorData(TfLiteTensor*) [with T = signed char]	16	static
fixedpoint.h:64:10:tRawType gemmlowp::Dup(typename gemmlowp::FixedPointRawTypeTraits<tRawType>::ScalarRawType) [with tRawType = long int]	16	static
fixedpoint.h:70:14:tIntegerType gemmlowp::BitAnd(tIntegerType, tIntegerType) [with tIntegerType = long int]	16	static
fixedpoint.h:140:14:tIntegerType gemmlowp::ShiftRight(tIntegerType, int) [with tIntegerType = long int]	16	static
fixedpoint.h:199:14:tIntegerType gemmlowp::MaskIfLessThan(tIntegerType, tIntegerType) [with tIntegerType = long int]	16	static
fixedpoint.h:94:14:tIntegerType gemmlowp::Add(tIntegerType, tIntegerType) [with tIntegerType = long int]	16	static
fixedpoint.h:185:14:tIntegerType gemmlowp::MaskIfGreaterThan(tIntegerType, tIntegerType) [with tIntegerType = long int]	16	static
fixedpoint.h:156:14:tIntegerType gemmlowp::MaskIfNonZero(tIntegerType) [with tIntegerType = long int]	16	static
fixedpoint.h:88:14:tIntegerType gemmlowp::BitNot(tIntegerType) [with tIntegerType = long int]	16	static
